import React, {Component} from 'react';

class ImageCard extends React.Component {
    constructor(props){
        super(props)
        this.state= {
            spans:0
        }
        //instance variable that we can ref to inside of our classe: need to create a refs
        //in the constructor for that
        //ref allow us to get a handle (gÃ©rer) on a particular element generated by a tag
        this.imageRef= React.createRef()
    }

componentDidMount(){
    //at the componene did mount location the image is not loaded yet. 
    //We created the DOM element only so the console log don't have acces the properties
    //then after its re-rendered and downloaded
    //the current property of the object: reference a DOM node (an image here with all its properties)
    //the image is not loaded up yet so we don't have the acces to heigt property
    //console doesn't know what exactly is in the Dom node of the image
    //console knows the heigth when we expand the object
    console.log(this.imageRef.current.clientHeight)
    //Solution
//we listen to the event and when its loaded we make use of a call back function
//that will give us the clientHeight
    this.imageRef.current.addEventListener('load', this.setSpans);
}
//binding by using arrow function here
setSpans =()=>{
    console.log(this.imageRef.current.clientHeight); 

    const height=this.imageRef.current.clientHeight; 
    //defining the number of span that is needed for each image
    const spans= Math.ceil(height/10);

    //key and value are the same so we shortcut it like that:
    this.setState ({spans});

}


    render() { 

        //destructuring object image into a couple of constants comming from the passed props from
        //the parent component ImageList 
        const { urls, description} = this.props.image; 

        return (
            <div style={{ gridRowEnd: `span ${this.state.spans}`}}>
                <img 
                //passing the props corresponding to the ref
                ref={this.imageRef}
                src={urls.regular} 
                alt={description}></img>
            </div>
          );
    }
}
 
export default ImageCard;